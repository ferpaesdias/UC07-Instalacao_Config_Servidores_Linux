name: Convert Markdown to PDF (single folder)

on:
  push:
    paths:
      - "**/*.md"                # dispara só quando .md mudar
    branches:
      - "**"
  workflow_dispatch:

permissions:
  contents: write                # necessário para commit/push

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Pandoc and LaTeX engine
        run: |
          sudo apt-get update
          sudo apt-get install -y pandoc texlive-xetex fonts-dejavu

      - name: Clean output folder (remove old PDFs)
        run: |
          rm -rf build/pdf
          mkdir -p build/pdf

      - name: Convert all .md to PDFs into single folder
        shell: bash
        run: |
          set -euo pipefail

          shopt -s globstar nullglob

          # Usa 'git ls-files' para pegar apenas arquivos versionados; cobre .md e .MD
          mapfile -d '' files < <(git ls-files -z '*.md' '*.MD')

          if [[ "${#files[@]}" -eq 0 ]]; then
            echo "No Markdown files found."
          else
            for md in "${files[@]}"; do
              # Gera nome seguro único: caminho virando nome com "__" no lugar de "/"
              base_no_ext="${md%.*}"
              safe_name="${base_no_ext//\//__}"
              pdf="build/pdf/${safe_name}.pdf"

              echo "-> $md  =>  $pdf"
              pandoc "$md" -o "$pdf" --from markdown --pdf-engine=xelatex \
                -V mainfont="DejaVu Serif" \
                -V monofont="DejaVu Sans Mono" \
                -V geometry:margin=2cm
            done
          fi

      - name: Upload PDFs as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: all-pdfs
          path: build/pdf/**
          if-no-files-found: ignore

      - name: Commit PDFs back to repo
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Garante que a pasta existe e está atualizada (já limpamos e recriamos acima)
          git add -A build/pdf

          if ! git diff --cached --quiet; then
            git commit -m "chore(pdf): atualizar PDFs em build/pdf [skip ci]"
            git push
          else
            echo "No PDF changes to commit."
          fi
